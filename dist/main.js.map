{"version":3,"file":"main.js","mappings":"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","sources":["webpack://odin-wheres-waldo/./src/GoalContainer.js","webpack://odin-wheres-waldo/./src/Answer.js","webpack://odin-wheres-waldo/./src/index.js","webpack://odin-wheres-waldo/./src/IspyImage.js","webpack://odin-wheres-waldo/./src/Selector.js","webpack://odin-wheres-waldo/./src/GuessingBox.js","webpack://odin-wheres-waldo/./src/GuessingItem.js"],"sourcesContent":["const GoalContainer = (ipsyImageImagePath) => {\n  const BORDER_SIZE = 5;\n  const IMAGE_QUERY_SELECTOR_STRING = '#ispy-image';\n  let element;\n\n  const getElement = () => {\n    if (!element) {\n      element = generateElement();\n    }\n    return element;\n  }\n\n  const getBorderSize = () => BORDER_SIZE;\n\n  const generateElement = () => {\n    const goalContainer = document.createElement('div');\n    const ispyImageElement = document.querySelector(IMAGE_QUERY_SELECTOR_STRING);\n    const ispyImageWidth = ispyImageElement.style.width.split('p')[0];\n    const ispyImageHeight = ispyImageElement.style.height.split('p')[0];\n    goalContainer.id = 'goal-container';\n    goalContainer.style.width = `${ispyImageWidth}px`;\n    goalContainer.style.height = `${ispyImageHeight / 5}px`;\n    goalContainer.style.border = `${BORDER_SIZE}px solid black`;\n    goalContainer.style.boxSizing = 'border-box';\n    goalContainer.style.display = 'flex';\n    ispyImageElement.after(goalContainer);\n    return goalContainer;\n  }\n\n  const generateGoals = (goalArray) => {\n    const ispyImageElement = document.querySelector(IMAGE_QUERY_SELECTOR_STRING);\n    const backgroundImage = ispyImageElement.style.backgroundImage;\n    goalArray.forEach((goal) => {\n      goal.setImage(ipsyImageImagePath)\n      goal.generateGoal(getElement());\n    })\n  }\n\n  return {\n    getElement,\n    generateGoals,\n    generateElement,\n    getBorderSize,\n  }\n}\n\nexport default GoalContainer;","const Answer = (answerObject) => {\n\n  const { name, coords } = answerObject;\n  let image = null;\n  let ipsyImageObject = null;\n\n  const getName = () => name;\n  const getCoords = () => coords;\n\n  const width = () => coords[1][0] - coords[0][0];\n  const height = () => coords[2][1] - coords[0][1];\n\n  const setImage = (imageToSet) => {\n    image = imageToSet;\n  }\n\n  const setIpsyImageObject = (newIpsyImageObject) => {\n    ipsyImageObject = newIpsyImageObject\n  }\n\n  const getImage = () => image;\n\n  const generateGoal = (goalContainerElement) => {\n    const ZOOM = 1000;\n    const goalElement = document.createElement('div');\n    goalElement.classList.add('goal-item')\n    const goalContainerWidth = goalContainerElement.style.width.split('p')[0];\n    const goalContainerHeight = goalContainerElement.style.height.split('p')[0];\n    const goalWidth = goalContainerWidth / 5;\n    const goalHeight = goalContainerHeight - 5;\n    goalElement.style.width = `${goalWidth}px`;\n    goalElement.style.height = `${goalHeight}px`;\n    goalElement.style.border = '1px solid black';\n    goalElement.style.boxSizing = 'border-box';\n    goalElement.style.backgroundSize = `${ZOOM}% ${ZOOM}%`;\n    goalElement.style.backgroundRepeat = 'no-repeat';\n    goalElement.style.backgroundImage = `url('${image}')`;\n    const offSetX = -50;\n    const offSetY = -100\n    const backgroundPositionX = (-getCoords()[0][0] + offSetX);\n    const backgroundPositionY = (-getCoords()[0][1] + offSetY);\n    //console.log(backgroundPositionX);\n    //console.log(backgroundPositionY)\n\n    goalElement.style.backgroundPosition = `${backgroundPositionX}px ${backgroundPositionY}px`;\n    goalContainerElement.appendChild(goalElement);\n  }\n\n  const generateAnswerSpace = (ipsyImageElement) => {\n    const answerElement = document.createElement('div');\n    answerElement.classList.add('answer');\n    answerElement.style.position = 'absolute';\n    answerElement.style.top = '0px';\n    answerElement.style.left = '0px';\n    answerElement.style.width = `${width()}px`;\n    answerElement.style.height = `${height()}px`;\n    answerElement.style.top = `${getCoords()[0][1]}px`;\n    answerElement.style.left = `${getCoords()[0][0]}px`\n    answerElement.style.border = '5px solid red';\n    answerElement.addEventListener('click', setToCorrectAnswer)\n    ipsyImageElement.appendChild(answerElement);\n  }\n\n  const setToCorrectAnswer = () => {\n    console.log(`You are clicking on ${name}`)\n  }\n\n  const attemptAnswer = (answerX, answerY) => {\n    console.log(name, answerX, answerY)\n  }\n\n  return {\n    getName,\n    getCoords,\n    width,\n    height,\n    setImage,\n    getImage,\n    generateGoal,\n    generateAnswerSpace,\n    setIpsyImageObject,\n    attemptAnswer,\n  }\n}\n\nexport default Answer;","import IspyImage from './IspyImage';\nimport Selector from './Selector';\nimport Answer from './Answer';\nimport GuessingBox from './GuessingBox';\nconst answers = [];\n\nconst answer1 = Answer({\n  name: 'sebastian',\n  coords: [\n    [77, 100],\n    [184, 100],\n    [77, 228],\n    [184, 228]],\n});\n\nconst answer2 = Answer({\n  name: \"limbo\",\n  coords: [\n    [705, 488],\n    [800, 488],\n    [705, 645],\n    [800, 645]\n  ]\n})\n\nanswers.push(answer1);\nanswers.push(answer2);\n\nconst ispyImage = IspyImage(answers, Selector, GuessingBox);\n","import GoalContainer from './GoalContainer';\nconst IspyImage = (correctAnswers, SelectorFactoryFunction, GuessingBoxFactoryFunction) => {\n  const WIDTH = 1200;\n  const HEIGHT = 700;\n  const getWidth = () => WIDTH;\n  const getHeight = () => HEIGHT;\n\n  const imagePathChoices = ['./assets/games.jpeg'];\n  const imagePath = imagePathChoices[0];\n  const getImagePath = () => imagePath;\n\n  const createImageElement = () => {\n    const imageElement = document.createElement('div');\n    imageElement.style.backgroundSize = '100% 100%';\n    imageElement.style.backgroundRepeat = 'no-repeat';\n    imageElement.style.backgroundImage = `url('${imagePath}')`;\n    imageElement.style.boxSizing = 'border-box';\n\n    imageElement.style.width = `${WIDTH}px`;\n    imageElement.style.height = `${HEIGHT}px`;\n    imageElement.id = 'ispy-image';\n\n    document.body.appendChild(imageElement);\n    return imageElement;\n  }\n\n\n\n\n  const element = createImageElement();\n  const goalContainer = GoalContainer(getImagePath());\n  const selector = SelectorFactoryFunction();\n  const guessingBox = GuessingBoxFactoryFunction(correctAnswers, selector)\n\n  goalContainer.generateElement();\n  goalContainer.generateGoals(correctAnswers);\n  correctAnswers.forEach((answer) => {\n    answer.generateAnswerSpace(element);\n  });\n\n  const startAnswering = () => {\n    console.log('start aswering')\n    guessingBox.open(selector.getTop(), selector.getLeft());\n    selector.setUpdatingPosition(false);\n  }\n\n  element.style.backgroundColor = 'red'\n  element.addEventListener('click', startAnswering);\n\n\n\n\n  return {\n    imagePath,\n    getHeight,\n    getWidth,\n  }\n}\n\nexport default IspyImage;","import GuessingBox from './GuessingBox';\n\nconst Selector = (querySelector) => {\n  const WIDTH = 100;\n  const HEIGHT = 100;\n  const ZOOM = 1;\n\n  let isUpdatingPosition = true;\n\n\n  let top;\n  let left;\n\n  const getTop = () => top;\n  const getLeft = () => left;\n\n\n  const setUpdatingPosition = (newBool) => {\n    isUpdatingPosition = newBool;\n  }\n\n  const getIsUpdatingPosition = () => isUpdatingPosition;\n\n\n\n\n  const BORDER = '4px solid black';\n  const BORDER_RADIUS = '100%';\n  const ISPY_ELEMENT = document.querySelector(querySelector)\n\n  const element = document.createElement('div');\n  element.classList.add('selector');\n  element.style.width = `${WIDTH}px`;\n  element.style.height = `${HEIGHT}px`;\n  element.style.border = BORDER;\n  element.style.borderRadius = BORDER_RADIUS;\n  element.style.position = 'absolute';\n  //document.body.appendChild(element);\n\n  const updateSelectorPosition = (e) => {\n    if (!isUpdatingPosition) { return }\n\n    const x = e.clientX;\n    const y = e.clientY;\n    const offset = 1;\n    left = x - (WIDTH / 2);\n    top = y - (HEIGHT / 2);\n    element.style.left = `${left}px`;\n    element.style.top = `${top}px`;\n    //console.log(left, top)\n  }\n\n\n\n  document.addEventListener('mousemove', updateSelectorPosition)\n\n\n  return {\n    getLeft,\n    getTop,\n    setUpdatingPosition,\n  }\n\n}\n\nexport default Selector;","import GuessingItem from \"./GuessingItem\";\n\nconst GuessingBox = (answerArray, selector) => {\n\n  let element;\n  const getElement = () => element;\n\n  const open = (top, left) => {\n    const offset = 40;\n    element.style.top = `${top + offset}px`;\n    element.style.left = `${left + offset}px`;\n    element.style.visibility = 'visible';\n  }\n\n  const createElement = () => {\n    const boxElement = document.createElement('div');\n    boxElement.id = 'guessing-box';\n    boxElement.style.backgroundColor = '#34495e';\n    boxElement.style.color = '#ecf0f1';\n    boxElement.style.width = '200px';\n    boxElement.style.height = '300px';\n    boxElement.style.position = 'fixed';\n    boxElement.style.top = '0px';\n    boxElement.style.left = '0px';\n    boxElement.style.display = 'grid';\n    boxElement.style.rowGap = '2px';\n\n    //boxElement.style.visibility = 'hidden';\n\n    document.body.appendChild(boxElement);\n    return boxElement\n  }\n\n  const createAnswerChoices = () => {\n    //\n    answerArray.forEach((answer) => {\n      const item = GuessingItem(answer, selector);\n      const itemElement = item.createElement();\n      element.appendChild(itemElement);\n    })\n\n  }\n\n\n  element = createElement();\n  createAnswerChoices();\n\n\n\n  return {\n    open,\n  }\n}\n\nexport default GuessingBox;","\nconst GuessingItem = (answerObject, selector) => {\n\n  const createElement = () => {\n    const guessingElement = document.createElement('div');\n    guessingElement.classList.add('guessing-item');\n    guessingElement.textContent = answerObject.getName();\n    guessingElement.style.fontFamily = \"Verdana, sans-serif\";\n    const originalBackgroundColor = \"#2c3e50\"\n    guessingElement.style.backgroundColor = originalBackgroundColor;\n    guessingElement.style.padding = \"20px\"\n    guessingElement.addEventListener('mouseenter', () => {\n      guessingElement.style.backgroundColor = \"#7f8c8d\"\n      guessingElement.style.cursor = \"pointer\";\n    });\n\n    guessingElement.addEventListener('mouseleave', () => {\n      guessingElement.style.backgroundColor = originalBackgroundColor;\n      guessingElement.style.cursor = \"default\";\n    });\n\n    guessingElement.addEventListener('click', () => {\n      answerObject.attemptAnswer(selector.getLeft(), selector.getTop());\n    })\n\n    const answeredCorrectly = () => {\n\n\n      return true;\n    }\n    return guessingElement;\n  }\n\n  return {\n    createElement,\n  }\n}\n\nexport default GuessingItem; "],"names":["answerObject","name","coords","image","ipsyImageObject","getCoords","width","height","setToCorrectAnswer","console","log","getName","setImage","imageToSet","getImage","generateGoal","goalContainerElement","goalElement","document","createElement","classList","add","goalWidth","style","split","goalHeight","border","boxSizing","backgroundSize","backgroundRepeat","backgroundImage","backgroundPositionX","backgroundPositionY","backgroundPosition","appendChild","generateAnswerSpace","ipsyImageElement","answerElement","position","top","left","addEventListener","setIpsyImageObject","newIpsyImageObject","attemptAnswer","answerX","answerY","answers","answer1","answer2","push","correctAnswers","SelectorFactoryFunction","GuessingBoxFactoryFunction","imagePath","element","imageElement","id","body","createImageElement","goalContainer","ipsyImageImagePath","IMAGE_QUERY_SELECTOR_STRING","getElement","generateElement","ispyImageElement","querySelector","ispyImageWidth","ispyImageHeight","display","after","generateGoals","goalArray","forEach","goal","getBorderSize","selector","guessingBox","answer","backgroundColor","open","getTop","getLeft","setUpdatingPosition","isUpdatingPosition","borderRadius","e","x","clientX","y","clientY","newBool","answerArray","boxElement","color","rowGap","itemElement","guessingElement","textContent","fontFamily","originalBackgroundColor","padding","cursor","visibility"],"sourceRoot":""}